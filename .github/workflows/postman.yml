name: Postman

on:
  schedule:
      - cron: '0 23 * * sun'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        default: "latest"
        description: "Postman Version, accepted values: ['latest', 'version/8.x.x', 'version/9.x.x']"
        required: true
  

env:
  FORCE_COLOR : 'true' # Force colors in console output
  VERSION: "latest" # to use custom postman version change this line into:
                    # VERSION: "version/x.x.x"
                    # example: VERSION: "version/8.9.1"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix: 
        include:
          - os_name: 'Linux x86_64'
            os_type:  'linux64'
            extract_cmd: 'tar -xf'
            extension: '.tar.gz'
            
          - os_name: 'Mac OS - Intel x86_64'
            os_type:  'osx_64'
            extract_cmd: 'unzip -q'
            extension: '.zip'
            
          - os_name: 'Mac OS - Apple Silicon'
            os_type:  'osx_arm64'
            extract_cmd: 'unzip -q'
            extension: '.zip'
    
    name: "Fix Postman Scratchpad - ${{ matrix.os_name }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name : "Install aria2 downloader" 
        run: sudo apt update && sudo apt install aria2
      
      - name : "Install rename utility" 
        run: sudo apt update && sudo apt install rename

      - name : "Configure VERSION Environment Variable" 
        run: |
          input_version="${{ github.event.inputs.version }}"
          if [[ ! -z $input_version ]]; then
            echo "Determined version from user input: $input_version"
            echo "VERSION=${input_version}" >> $GITHUB_ENV
          fi

      - name : "Download & Extract Postman " 
        run: |
          wget --content-disposition -q "https://dl.pstmn.io/download/${{ env.VERSION }}/${{ matrix.os_type }}"
          rename --verbose 'y/A-Z/a-z/' Postman* # Rename to lowercase
          ${{ matrix.extract_cmd }} postman*
          rename --verbose 'y/A-Z/a-z/' Postman* # Rename to lowercase
          
          ext=${{ matrix.extension }}
          file=$(ls postman*${ext})
          rm -v "${file}"
          
          mv postman* Postman
          
      - name : "Get Postman Version" 
        run: |
          version=$(cat Postman/app/resources/app/package.json | jq .version -r)
          echo "Postman Version = ${version}"
          echo "VERSION=${version}" >> $GITHUB_ENV
          
      - name : "Check if app.asar file is found" 
        run: |
          path=$(find $PWD/Postman -type f -iname app.asar)
          
          if [[ "${path}" == *app.asar ]]; then
            echo "app.asar path: ${path}"
          else
            echo "No app.asar file"
            echo "NO_APP_ASAR=True" >> $GITHUB_ENV
          fi
          
      - name : "Fix Scratch Pad Banner" 
        run: |
          npm install
          node fix.js -p ./Postman -v
 
      - name : "Postman Cleanup" 
        if: ${{ env.NO_APP_ASAR }}
        continue-on-error: true
        run: |
          curl -sf 'https://gobinaries.com/tj/node-prune' | sudo sh
          find . -type d -name node_modules -exec node-prune {} \;
      
      - name : "Create Postman archive" 
        run: |
          tar --xz -cf postman-${{ matrix.os_type }}-${{ env.VERSION }}.tar.xz ./Postman
          ls -lh
          
      - name : "Calculate Checksum" 
        run: |
          echo -e "\nChecksum - ${{ matrix.os_name }}\n" | tee -a checksum
          echo -n "SHA1: " | tee -a checksum
          sha1sum postman*.tar.xz | tee -a checksum
          echo -n "SHA256: " | tee -a checksum
          sha256sum postman*.tar.xz | tee -a checksum

      - name: Release Files
        uses: softprops/action-gh-release@master # use @master to be able to use append_body, use @v1 when it is released
        with:
          name: "Postman v${{ env.VERSION }}"
          body_path: checksum
          append_body: true
          tag_name: ${{ env.VERSION }}
          files: postman*.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

